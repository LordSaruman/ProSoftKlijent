/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Lokacija;
import domen.Region;
import domen.Tim;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import static java.lang.Character.isLetter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import operacije.Operacija;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;
import transfer.StatusZahteva;

/**
 *
 * @author filip_000
 */
public class IzmenaTimova extends javax.swing.JDialog {

    Double gold = 0.0;
    private int idTima;
    /**
     * Creates new form IzmenaTimova
     */
    public IzmenaTimova(java.awt.Frame parent, boolean modal) throws Exception {
        super(parent, modal);
        initComponents();
        popuniComboNazivTimova();
        popuniOstaleKombove();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFieldTrener = new javax.swing.JTextField();
        txtFieldSponzor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFieldZaradjenNovac = new javax.swing.JTextField();
        btnSacuvajTim = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtFieldMenadzer = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jcbCSGO = new javax.swing.JCheckBox();
        jcbDota2 = new javax.swing.JCheckBox();
        jlblTrenerPoruka = new javax.swing.JLabel();
        jlbMenadzerPoruka = new javax.swing.JLabel();
        jlblSponzorPoruka = new javax.swing.JLabel();
        jlblZaradjenNovacPoruka = new javax.swing.JLabel();
        jlblIgreKojeTimIgraPoruka = new javax.swing.JLabel();
        comboNazivTima = new javax.swing.JComboBox();
        btnIzmeni = new javax.swing.JButton();
        lblRegionPoruka = new javax.swing.JLabel();
        lblLokacijaPoruka = new javax.swing.JLabel();
        comboRegion = new javax.swing.JComboBox();
        comboLocation = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("[CSGO] Change a Team");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Team"));

        jLabel1.setText("Name of team:");

        jLabel2.setText("Location:");

        jLabel3.setText("Region:");

        jLabel4.setText("Coach:");

        jLabel5.setText("Sponsor:");

        jLabel6.setText("Earned money:");

        btnSacuvajTim.setText("Save the team");
        btnSacuvajTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajTimActionPerformed(evt);
            }
        });

        jLabel13.setText("Manager:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Games that team plays\n"));

        jcbCSGO.setText("Counter-Strike: Global Offensive");

        jcbDota2.setText("Dota 2");
        jcbDota2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDota2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbDota2)
                    .addComponent(jcbCSGO, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbCSGO)
                .addGap(18, 18, 18)
                .addComponent(jcbDota2)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jlblTrenerPoruka.setForeground(new java.awt.Color(255, 0, 0));

        jlbMenadzerPoruka.setForeground(new java.awt.Color(255, 0, 0));

        jlblSponzorPoruka.setForeground(new java.awt.Color(255, 0, 0));

        jlblZaradjenNovacPoruka.setForeground(new java.awt.Color(255, 0, 0));

        jlblIgreKojeTimIgraPoruka.setForeground(new java.awt.Color(255, 0, 0));

        comboNazivTima.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboNazivTimaItemStateChanged(evt);
            }
        });

        btnIzmeni.setText("Change the data");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(txtFieldMenadzer, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlbMenadzerPoruka, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(37, 37, 37)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlblTrenerPoruka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFieldTrener)
                            .addComponent(comboNazivTima, 0, 221, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlblZaradjenNovacPoruka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblRegionPoruka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlblSponzorPoruka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFieldSponzor, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addComponent(lblLokacijaPoruka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboRegion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboLocation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFieldZaradjenNovac)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jlblIgreKojeTimIgraPoruka, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIzmeni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSacuvajTim)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboNazivTima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFieldTrener, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblTrenerPoruka)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtFieldMenadzer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbMenadzerPoruka)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtFieldSponzor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblSponzorPoruka)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRegionPoruka)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLokacijaPoruka)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtFieldZaradjenNovac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlblZaradjenNovacPoruka)
                .addGap(27, 27, 27)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlblIgreKojeTimIgraPoruka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIzmeni)
                    .addComponent(btnSacuvajTim))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajTimActionPerformed
        try {
            Tim timSelected = (Tim) comboNazivTima.getSelectedItem();
            String naziv = timSelected.getNaziv();

            String trener = txtFieldTrener.getText().trim();
            String menadzer = txtFieldMenadzer.getText().trim();
            String sponzor = txtFieldSponzor.getText().trim();
            Region region = (Region) comboRegion.getSelectedItem();
            Lokacija lokacija = (Lokacija) comboLocation.getSelectedItem();
            String novac = txtFieldZaradjenNovac.getText().trim();
            Tim tim;

            String igre = "";
            if (jcbCSGO.isSelected()) {
                igre += "CSGO" + "";
                if (jcbDota2.isSelected()) {
                    igre += "Dota2";
                }
            }

            if (kreirajIIzvrsiValidaciju(naziv, trener, menadzer, sponzor, region, lokacija, igre, novac) == true) {
                tim = vratiTim(naziv, trener, menadzer, sponzor, region, lokacija, igre, novac);
                KlijentskiZahtev kz = new KlijentskiZahtev();
                kz.setOperacija(Operacija.SACUVAJ);
                kz.setParametar(tim);
                Komunikacija.getInstance().posaljiZahtev(kz);

                ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();
                if (so.getStatusZahteva() == StatusZahteva.USPESAN_ZAHTEV) {
                    JOptionPane.showMessageDialog(this, "Team has been successfully saved!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Team has not been saved.", "Error", JOptionPane.ERROR_MESSAGE);
                    invalidate();
                    repaint();
                    validate();
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(null, "Failed validation. Check all fields.", "Error", JOptionPane.ERROR_MESSAGE);
                invalidate();
                repaint();
                validate();
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(UnosTimova.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnSacuvajTimActionPerformed

    private void jcbDota2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDota2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbDota2ActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        jcbCSGO.setEnabled(true);
        jcbDota2.setEnabled(true);
        comboLocation.setEnabled(true);
        txtFieldMenadzer.setEnabled(true);
        comboRegion.setEnabled(true);
        txtFieldSponzor.setEnabled(true);
        txtFieldTrener.setEnabled(true);
        txtFieldZaradjenNovac.setEnabled(true);
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void comboNazivTimaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboNazivTimaItemStateChanged
        comboNazivTima.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (evt.getStateChange() == ItemEvent.SELECTED) {
                    popuniSvaPoljaNaFormi();
                }
            }
        });
    }//GEN-LAST:event_comboNazivTimaItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnSacuvajTim;
    private javax.swing.JComboBox comboLocation;
    private javax.swing.JComboBox comboNazivTima;
    private javax.swing.JComboBox comboRegion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JCheckBox jcbCSGO;
    private javax.swing.JCheckBox jcbDota2;
    private javax.swing.JLabel jlbMenadzerPoruka;
    private javax.swing.JLabel jlblIgreKojeTimIgraPoruka;
    private javax.swing.JLabel jlblSponzorPoruka;
    private javax.swing.JLabel jlblTrenerPoruka;
    private javax.swing.JLabel jlblZaradjenNovacPoruka;
    private javax.swing.JLabel lblLokacijaPoruka;
    private javax.swing.JLabel lblRegionPoruka;
    private javax.swing.JTextField txtFieldMenadzer;
    private javax.swing.JTextField txtFieldSponzor;
    private javax.swing.JTextField txtFieldTrener;
    private javax.swing.JTextField txtFieldZaradjenNovac;
    // End of variables declaration//GEN-END:variables

    private void popuniComboNazivTimova() throws Exception {
        comboNazivTima.removeAllItems();
        ArrayList<Tim> lista = new ArrayList<>();
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacija.VRATI_LISTU);
        kz.setParametar(new Tim());
        Komunikacija.getInstance().posaljiZahtev(kz);

        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();
        if (so.getStatusZahteva() == StatusZahteva.USPESAN_ZAHTEV) {
            lista = (ArrayList<Tim>) so.getOdgovor();
            for (Tim tim : lista) {
                comboNazivTima.addItem(tim);
            }
        }
    }

    private void popuniSvaPoljaNaFormi() {
        Tim tim = (Tim) comboNazivTima.getSelectedItem();
        comboLocation.setSelectedItem(tim.getLokacije());
        txtFieldMenadzer.setText(tim.getMenadzer());
        comboRegion.setSelectedItem(tim.getRegion());
        txtFieldSponzor.setText(tim.getSponzor());
        txtFieldTrener.setText(tim.getTrener());
        txtFieldZaradjenNovac.setText(tim.getZaradjenNovac().toString());

        String igre = tim.getIgre();
        if (igre.contains("CSGO")) {
            jcbCSGO.isSelected();
            jcbCSGO.setEnabled(false);
            if (igre.contains("Dota2")) {
                jcbDota2.isSelected();
                jcbDota2.setEnabled(false);
            }
        }

        comboLocation.setEnabled(false);
        txtFieldMenadzer.setEnabled(false);
        comboRegion.setEnabled(false);
        txtFieldSponzor.setEnabled(false);
        txtFieldTrener.setEnabled(false);
        txtFieldZaradjenNovac.setEnabled(false);
    }

    private void popuniOstaleKombove() {
        comboLocation.removeAllItems();
        comboRegion.removeAllItems();
        ArrayList<Lokacija> listaL = new ArrayList<>();
        ArrayList<Region> listaR = new ArrayList<>();

        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacija.VRATI_LISTU);
        kz.setParametar(new Lokacija());
        Komunikacija.getInstance().posaljiZahtev(kz);

        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();
        if (so.getStatusZahteva() == StatusZahteva.USPESAN_ZAHTEV) {
            listaL = (ArrayList<Lokacija>) so.getOdgovor();
            for (Lokacija lokacija : listaL) {
                comboNazivTima.addItem(lokacija);
            }
        }

        kz = new KlijentskiZahtev();
        kz.setOperacija(Operacija.VRATI_LISTU);
        kz.setParametar(new Region());
        Komunikacija.getInstance().posaljiZahtev(kz);

        so = Komunikacija.getInstance().primiOdgovor();
        if (so.getStatusZahteva() == StatusZahteva.USPESAN_ZAHTEV) {
            listaR = (ArrayList<Region>) so.getOdgovor();
            for (Region region : listaR) {
                comboNazivTima.addItem(region);
            }
        }
    }

    private boolean kreirajIIzvrsiValidaciju(String naziv, String trener, String menadzer, String sponzor, Region region, Lokacija lokacija, String igre, String novac) {
        boolean validnaForma = true;

        if (trener == null || trener.isEmpty()) {
            jlblTrenerPoruka.setText("Field for coach name is empty.");
            jlblTrenerPoruka.setForeground(Color.red);
            validnaForma = false;
        } else {
            jlblTrenerPoruka.setText("");
        }
        
        if (menadzer == null || menadzer.isEmpty()) {
            jlbMenadzerPoruka.setText("Field for manager name is empty.");
            jlbMenadzerPoruka.setForeground(Color.red);
            validnaForma = false;
        } else {
            jlbMenadzerPoruka.setText("");
        }
        
        if (sponzor == null || sponzor.isEmpty()) {
            jlblSponzorPoruka.setText("Field for sponsor name is empty.");
            jlblSponzorPoruka.setForeground(Color.red);
            validnaForma = false;
        } else {
            jlblSponzorPoruka.setText("");
        }
        
        if (novac == null || novac.isEmpty()) {
            jlblZaradjenNovacPoruka.setText("Field for money is empty.");
            jlblZaradjenNovacPoruka.setForeground(Color.red);
            validnaForma = false;
        } else {
            jlblZaradjenNovacPoruka.setText("");
            for (int i = 0; i < novac.length(); i++) {
                if (!Character.isDigit(novac.charAt(i))) {
                    jlblZaradjenNovacPoruka.setText("Only numbers can be accepted here.");
                    jlblZaradjenNovacPoruka.setForeground(Color.red);
                    validnaForma = false;
                    break;
                }
            }
        }

        if (igre == null || igre.isEmpty()) {
            jlblIgreKojeTimIgraPoruka.setText("At least one option must be checked.");
            jlblIgreKojeTimIgraPoruka.setForeground(Color.red);
            validnaForma = false;
        } else {
            jlblIgreKojeTimIgraPoruka.setText("");
        }
        
        boolean prosao = true;
        for (int i = 0; i < novac.length(); i++) {
            if (isLetter(novac.charAt(i)) || novac.isEmpty()) {
                validnaForma = false;
                prosao = false;
                break;
            }
        }

        try {
            if (prosao == true) {
                gold = Double.parseDouble(novac);
            }
        } catch (Exception e) {
            System.out.println(e);
        }

        if (!validnaForma) {
            JOptionPane.showMessageDialog(this, "You didn't provide info for all fields on the form or you have some input errors.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private Tim vratiTim(String naziv, String trener, String menadzer, String sponzor, Region region, Lokacija lokacija, String igre, String novac) {
        return new Tim(idTima, naziv, trener, menadzer, sponzor, igre, gold, region, lokacija);
    }
}
